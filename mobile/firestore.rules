rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isAuthenticated() {
      return request.auth != null;
    }

    // Challenges Collection
    match /challenges/{challengeId} {
      // Jeder eingeloggte Nutzer darf Challenges lesen
      allow read: if isAuthenticated();
      
      // Nur der authentifizierte Nutzer darf Challenges für sich selbst erstellen
      allow create: if isAuthenticated() && 
        request.resource.data.creatorId == request.auth.uid;
      
      allow update, delete: false;
    }

    // Challenge Attempts Collection
    match /challengeAttempts/{attemptId} {
      // Nutzer dürfen nur ihre eigenen Attempts lesen
      allow read: if isAuthenticated() && 
        resource.data.userId == request.auth.uid;
      
      // Nutzer dürfen nur Attempts für sich selbst erstellen
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
      
      // Nutzer dürfen nur ihre eigenen Attempts aktualisieren
      allow update: if isAuthenticated() && 
        resource.data.userId == request.auth.uid &&
        request.resource.data.userId == request.auth.uid;
      
      allow delete: false;
    }
  }
}

service firebase.storage {
  match /b/{bucket}/o {
    // Profilbilder-Pfad: 'profile_images/{userId}/profile.jpg'
    match /profile_images/{userId}/{fileName} {
      // Erlaubt Lesen für alle
      allow read: if true;
      // Erlaubt Löschen für den Besitzer
      allow delete: if
        // Prüft ob der Nutzer eingeloggt ist
        request.auth != null &&
        // Prüft ob der Nutzer sein eigenes Verzeichnis bearbeitet
        request.auth.uid == userId;
      // Erlaubt Schreiben nur für den Besitzer
      allow write: if 
        // Prüft ob der Nutzer eingeloggt ist
        request.auth != null &&
        // Prüft ob der Nutzer sein eigenes Verzeichnis bearbeitet
        request.auth.uid == userId &&
        // Optional: Prüft ob es sich um ein Bild handelt
        request.resource.contentType.matches('image/.*') &&
        // Optional: Limitiert die Dateigröße (hier: 5MB)
        request.resource.size < 5 * 1024 * 1024;
    }

    // Challenge-Bilder-Pfad: 'challenge_images/{attemptId}/{fileName}'
    match /challenge_images/{attemptId}/{fileName} {
      // Erlaubt Lesen für alle
      allow read: if true;
      // Erlaubt Schreiben nur für authentifizierte Nutzer
      allow write: if
        // Prüft ob der Nutzer eingeloggt ist
        request.auth != null &&
        // Prüft ob es sich um ein Bild handelt
        request.resource.contentType.matches('image/.*') &&
        // Limitiert die Dateigröße (hier: 5MB)
        request.resource.size < 5 * 1024 * 1024;
    }
  }
} 